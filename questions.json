{
  "API Gateway": [
    {
      "Q_No": "1",
      "Question": "To make a Serverless API, you should integrate API Gateway with .........................",
      "A": "Amazon EC2",
      "B": "Elastic Load Balancer",
      "C": "AWS Lambda",
      "D": "",
      "E": "",
      "Answer": "C",
      "Explanation": "API Gateway integrates with AWS Lambda for serverless APIs."
    },
    {
      "Q_No": "2",
      "Question": "To redirect your API Gateway stage to the correct AWS Lambda Alias, you should use .........................",
      "A": "Canary Deployment",
      "B": "Stage Variables",
      "C": "X-Ray Integration",
      "D": "HTTP Endpoint",
      "E": "",
      "Answer": "B",
      "Explanation": "Stage Variables let API Gateway route to different Lambda Aliases."
    },
    {
      "Q_No": "3",
      "Question": "You can integrate API Gateway with the following, EXCEPT .........................",
      "A": "Lambda Functions",
      "B": "HTTP Endpoints",
      "C": "AWS Services",
      "D": "AWS CloudShell",
      "E": "",
      "Answer": "D",
      "Explanation": "API Gateway does not integrate with AWS CloudShell."
    },
    {
      "Q_No": "4",
      "Question": "You have created a whole new API (v2) and you want to test it, but you're worried about shifting all the traffic to it. What is the recommended way to test it?",
      "A": "Create a whole new Stage, then use Route 53 to distribute traffic between your two Stages using a Weighted record (CNAME)",
      "B": "Create a Canary release",
      "C": "Update all your Lambda functions to use Aliases",
      "D": "",
      "E": "",
      "Answer": "B",
      "Explanation": "Canary release lets you test a new version by shifting a portion of traffic"
    },
    {
      "Q_No": "5",
      "Question": "You have an API Gateway backed by a set of Lambda functions and want to mask some fields in the output data. What should you use?",
      "A": "Mapping Templates",
      "B": "Custom Authorizer",
      "C": "Cognito Mask",
      "D": "",
      "E": "",
      "Answer": "A",
      "Explanation": "Mapping Templates enable output transformation and masking fields in API Gateway."
    },
    {
      "Q_No": "6",
      "Question": "Which specification allows you to import/export your API as code?",
      "A": "gRPC",
      "B": "SOAP",
      "C": "Swagger / OpenAPI",
      "D": "",
      "E": "",
      "Answer": "C",
      "Explanation": "Swagger / OpenAPI is the standard for defining APIs as code and for import/export."
    },
    {
      "Q_No": "7",
      "Question": "Your Lambda-backed API is overloaded and costly. The response is the same all day. What should you do?",
      "A": "Enable mock responses",
      "B": "Integrate API Gateway with ElastiCache",
      "C": "Enable Caching for your Stage",
      "D": "",
      "E": "",
      "Answer": "C",
      "Explanation": "Enabling caching at the stage reduces invocations and billing for repeatable responses."
    },
    {
      "Q_No": "8",
      "Question": "API Gateway Caching is defined per ..................... with the default TTL ....................",
      "A": "API, 300 seconds",
      "B": "Stage, 300 seconds",
      "C": "API, 600 seconds",
      "D": "Stage, 600 seconds",
      "E": "",
      "Answer": "B",
      "Explanation": "Caching is stage-specific and the default TTL is 300 seconds."
    },
    {
      "Q_No": "9",
      "Question": "How can clients invalidate the cache of an API from the client-side?",
      "A": "Using Stage Variables",
      "B": "Pass an URL parameter InvalidateCache",
      "C": "Pass the HTTP header Cache-Control: max-age=0",
      "D": "",
      "E": "",
      "Answer": "C",
      "Explanation": "Sending \"Cache-Control: max-age=0\" header from the client invalidates the API cache."
    },
    {
      "Q_No": "10",
      "Question": "Which API Gateway feature allows you to implement pricing plans for different customers?",
      "A": "CORS",
      "B": "Usage Plans & API Keys",
      "C": "Lambda Authorizers",
      "D": "Deployment Stages",
      "E": "",
      "Answer": "B",
      "Explanation": "Usage Plans & API Keys allow you to manage and limit usage for different customers."
    },
    {
      "Q_No": "11",
      "Question": "You want to troubleshoot a serverless app with API Gateway, Lambda, DynamoDB, and slow/exceptions occur. What should you use?",
      "A": "CloudWatch Logs",
      "B": "CloudWatch Detailed Metrics",
      "C": "X-Ray",
      "D": "",
      "E": "",
      "Answer": "C",
      "Explanation": "X-Ray visualizes and traces API Gateway, Lambda, and DynamoDB interactions for troubleshooting."
    },
    {
      "Q_No": "12",
      "Question": "How do you support usage by users from multiple domains for your API?",
      "A": "Deploy a new Stage for each user",
      "B": "Enable CORS",
      "C": "Create a Stage Variable for each user",
      "D": "",
      "E": "",
      "Answer": "B",
      "Explanation": "CORS enables cross-domain access for APIs consumed from multiple domains."
    },
    {
      "Q_No": "13",
      "Question": "You want to authenticate requests made to your API. All requests contain a Bearer token in the Authorization header. These tokens must be validated against a 3rd party provider. What should you use?",
      "A": "IAM Roles with API Gateway",
      "B": "API Gateway Lambda Authorizer",
      "C": "Cognito User Pools with API Gateway",
      "D": "",
      "E": "",
      "Answer": "B",
      "Explanation": "Use Lambda Authorizer to validate tokens from an external/3rd party provider."
    },
    {
      "Q_No": "14",
      "Question": "You want to authenticate users against Facebook before requests to your API hosted by API Gateway. What should you use for seamless integration?",
      "A": "Cognito Sync",
      "B": "DynamoDB Table with Lambda Authorizer",
      "C": "Cognito User Pools",
      "D": "Cognito Federated Identity Pools",
      "E": "",
      "Answer": "C",
      "Explanation": "Cognito User Pools integrate with social identity providers for authentication."
    },
    {
      "Q_No": "15",
      "Question": "Which HTTP error code does API Gateway return when there are too many requests?",
      "A": "400",
      "B": "403",
      "C": "429",
      "D": "502",
      "E": "",
      "Answer": "C",
      "Explanation": "429 Too Many Requests is returned for rate limiting or throttling in API Gateway."
    },
    {
      "Q_No": "16",
      "Question": "Which CloudWatch metric helps analyze timeout issues between API Gateway and a Lambda function?",
      "A": "CacheHitCount",
      "B": "IntegrationLatency",
      "C": "CacheMissCount",
      "D": "Count",
      "E": "",
      "Answer": "B",
      "Explanation": "IntegrationLatency shows time API Gateway spends waiting on integrations like Lambda."
    },
    {
      "Q_No": "17",
      "Question": "API Gateway supports the WebSocket protocol for real-time APIs.",
      "A": "True",
      "B": "False",
      "C": "",
      "D": "",
      "E": "",
      "Answer": "A",
      "Explanation": "API Gateway supports WebSocket protocol for building real-time APIs."
    }
  ],
  "Dynamo DB": [
    {
      "Q_No": "1",
      "Question": "Before you create a DynamoDB table, you need to provision the EC2 instance the DynamoDB table will be running on.",
      "A": "True",
      "B": "False",
      "C": "",
      "D": "",
      "E": "",
      "Answer": "B",
      "Explanation": "DynamoDB is serverless with no servers to provision, patch, or manage and no software to install, maintain or operate. It automatically scales tables up and down to adjust for capacity and maintain performance. It provides both provisioned (specify RCU & WCU) and on-demand (pay for what you use) capacity modes."
    },
    {
      "Q_No": "2",
      "Question": "You have provisioned a DynamoDB table with 10 RCUs and 10 WCUs. A month later you want to increase the RCU to handle more read traffic. What should you do?",
      "A": "Increase RCU and keep WCU the same",
      "B": "You need to increase both RCU and WCU",
      "C": "Increase RCU and decrease WCU",
      "D": "",
      "E": "",
      "Answer": "A",
      "Explanation": "RCU and WCU are decoupled, so you can increase/decrease each value separately."
    },
    {
      "Q_No": "3",
      "Question": "You have an e-commerce website ... last year due to the huge traffic you had the ProvisionedThroughputExceededException exception. What would you do to prevent this error from happening again?",
      "A": "Increase the RCU to a very high value",
      "B": "Create a DAX Cluster",
      "C": "Migrate the database away from DynamoDB for the time of the sale",
      "D": "",
      "E": "",
      "Answer": "B",
      "Explanation": "DynamoDB Accelerator (DAX) caches the most frequently used data, offloading reads from hot keys and preventing ProvisionedThroughputExceededException."
    },
    {
      "Q_No": "4",
      "Question": "You developed a mobile app using DynamoDB as a datastore. You want to automate sending welcome emails to new users after they sign up. What is the most efficient way to achieve this?",
      "A": "Schedule a Lambda function to run every minute using CloudWatch Events, scan the entire table looking for new users",
      "B": "Enable SNS and DynamoDB integration",
      "C": "Enable DynamoDB Streams and configure it to invoke a Lambda function to send emails",
      "D": "",
      "E": "",
      "Answer": "C",
      "Explanation": "DynamoDB Streams + Lambda trigger allows real-time automated action in response to item-level modifications."
    },
    {
      "Q_No": "5",
      "Question": "You are running an application in production ... need to make the application run in development mode as well ... most cost-effective solution?",
      "A": "Use Provisioned Capacity Mode with Auto Scaling enabled for both development and production",
      "B": "Use Provisioned Capacity Mode with Auto Scaling enabled for production and use On-Demand Capacity Mode for development",
      "C": "Use Provisioned Capacity Mode with Auto Scaling enabled for development and use On-Demand Capacity Mode for production",
      "D": "Use On-Demand Capacity Mode for both development and production",
      "E": "",
      "Answer": "B",
      "Explanation": "Use Provisioned Capacity + Auto Scaling for stable prod, and On-Demand Capacity for unpredictable development requests for cost efficiency."
    },
    {
      "Q_No": "6",
      "Question": "The maximum size of an item in a DynamoDB table is ..................",
      "A": "400 KB",
      "B": "500 KB",
      "C": "400 MB",
      "D": "1 MB",
      "E": "",
      "Answer": "A",
      "Explanation": "The maximum size of an item in a DynamoDB table is 400 KB."
    },
    {
      "Q_No": "7",
      "Question": "DynamoDB tables scale ..........................",
      "A": "Vertically",
      "B": "Horizontally",
      "C": "",
      "D": "",
      "E": "",
      "Answer": "B",
      "Explanation": "DynamoDB tables scale horizontally by partitioning data across multiple nodes for high scalability."
    },
    {
      "Q_No": "8",
      "Question": "When your DynamoDB table's Primary Key is a combination of Partition Key + Sort Key, then .................... must be unique.",
      "A": "Partition Key + Sort Key",
      "B": "Partition Key",
      "C": "",
      "D": "",
      "E": "",
      "Answer": "A",
      "Explanation": "In such tables, the combination of Partition Key and Sort Key must be unique."
    },
    {
      "Q_No": "9",
      "Question": "For a blog posts table in DynamoDB, which column should you use as Partition Key for optimal distribution and grouping of posts per blog?",
      "A": "author_id",
      "B": "blog_content",
      "C": "blog_id",
      "D": "blog_date",
      "E": "",
      "Answer": "C",
      "Explanation": "Using blog_id as the partition key allows optimal distribution and efficient queries for all posts in a blog."
    },
    {
      "Q_No": "10",
      "Question": "An application writes 12 items per second into a DynamoDB table, with each item 8 KB in size. What WCU should you choose?",
      "A": "12",
      "B": "24",
      "C": "48",
      "D": "96",
      "E": "",
      "Answer": "D",
      "Explanation": "12 * (8 KB / 1 KB) = 96 WCU."
    },
    {
      "Q_No": "11",
      "Question": "An application doing Strongly Consistent reads of 10 items per second, with each item 10 KB in size. What RCU do you choose?",
      "A": "100",
      "B": "30",
      "C": "20",
      "D": "25",
      "E": "",
      "Answer": "B",
      "Explanation": "10 KB gets rounded to 12 KB. 10 * (12 KB / 4 KB) = 30 RCU."
    },
    {
      "Q_No": "12",
      "Question": "An application doing Eventually Consistent reads of 12 items per second, with each item 16 KB in size. What RCU do you choose?",
      "A": "192",
      "B": "48",
      "C": "24",
      "D": "12",
      "E": "",
      "Answer": "C",
      "Explanation": "Two Eventually Consistent reads per 4 KB with 1 RCU. 12 * (16 KB / 4 KB) = 48 / 2 = 24 RCU."
    },
    {
      "Q_No": "13",
      "Question": "An app begins to receive ProvisionedThroughputExceededException exceptions from a DynamoDB table but hasn't exceeded the total provisioned RCU. What is a possible cause for this?",
      "A": "Everything is good, just the CloudWatch metrics are slow to update",
      "B": "You have a Hot Partition / Hot Key",
      "C": "There's a bug in the application's code",
      "D": "",
      "E": "",
      "Answer": "B",
      "Explanation": "RCU/WCU are spread across all table’s partitions; a hot partition or key can cause throttling even if global limits aren’t reached."
    },
    {
      "Q_No": "14",
      "Question": "You are using GetItem API call to retrieve items from a DynamoDB table. Which of the following allows you to select only certain attributes from the item?",
      "A": "FilterExpression",
      "B": "ConditionalWrite",
      "C": "ProjectionExpression",
      "D": "",
      "E": "",
      "Answer": "C",
      "Explanation": "Use ProjectionExpression to retrieve only specific attributes from an item in DynamoDB."
    },
    {
      "Q_No": "15",
      "Question": "What is the best way to delete all the data in a DynamoDB table?",
      "A": "DeleteTable and then CreateTable",
      "B": "Use a Scan and run BatchWriteItem",
      "C": "Use a Scan and run DeleteItem",
      "D": "",
      "E": "",
      "Answer": "A",
      "Explanation": "Deleting and recreating the table is the fastest way to remove all data, compared to scanning and deleting each item individually."
    },
    {
      "Q_No": "16",
      "Question": "You want to perform a Scan operation on a DynamoDB table to retrieve all items. What should you do to increase the performance of your scan operation?",
      "A": "Increase the Limit parameter",
      "B": "Use Parallel Scans",
      "C": "Use Sequential Scans",
      "D": "Increase the RCU",
      "E": "",
      "Answer": "B",
      "Explanation": "Parallel scans allow you to divide and scan the table in segments simultaneously for faster results."
    },
    {
      "Q_No": "17",
      "Question": "You would like to make a Query to a DynamoDB table using an attribute that's NOT part of your table's Primary Key. What should you do to make this query efficient?",
      "A": "Nothing, Query supports non-key attributes",
      "B": "Create a Local Secondary Index",
      "C": "Create a Global Secondary Index",
      "D": "",
      "E": "",
      "Answer": "C",
      "Explanation": "A Global Secondary Index enables efficient queries on attributes that are not part of the primary key."
    },
    {
      "Q_No": "18",
      "Question": "You are designing a new DynamoDB table and want to make a Query using an attribute that's NOT part of the table's Primary Key, using the >= predicate while keeping the same Partition Key. What should you do?",
      "A": "Nothing, Use Query as is",
      "B": "Create a Local Secondary Index",
      "C": "Create a Global Secondary Index",
      "D": "",
      "E": "",
      "Answer": "B",
      "Explanation": "Use a Local Secondary Index for efficient queries on non-key attributes with the same partition key and sort predicates."
    },
    {
      "Q_No": "19",
      "Question": "Which Concurrency Model can be implemented using DynamoDB?",
      "A": "Optimistic Locking",
      "B": "Pessimistic Locking",
      "C": "No Locking",
      "D": "",
      "E": "",
      "Answer": "A",
      "Explanation": "DynamoDB supports Optimistic Locking using features like Conditional Writes and version numbers or timestamps."
    },
    {
      "Q_No": "20",
      "Question": "Which feature of DynamoDB allows you to achieve Optimistic Locking?",
      "A": "Conditional Reads",
      "B": "Conditional Writes",
      "C": "Locked Reads",
      "D": "Locked Writes",
      "E": "",
      "Answer": "B",
      "Explanation": "Conditional Writes enable Optimistic Locking by verifying that an item hasn't changed before updating it."
    },
    {
      "Q_No": "21",
      "Question": "You are using a DynamoDB table with Provisioned RCUs and WCUs and no throttling issues, but after adding a GSI, table throttles even though CloudWatch says base RCU/WCU are fine. What should you do?",
      "A": "The LSI is throttling, so provision more RCU and WCU to LSI",
      "B": "Adding both an LSI and GSI is not recommended",
      "C": "The GSI is throttling so you need to provision more RCU and WCU to the GSI",
      "D": "CloudWatch metrics takes time to propagate",
      "E": "",
      "Answer": "C",
      "Explanation": "Global Secondary Indexes (GSI) use their own RCU/WCU; if the GSI is under-provisioned, the main table can also be throttled."
    },
    {
      "Q_No": "22",
      "Question": "Which feature in DynamoDB allows you to automatically delete expired items from the table?",
      "A": "TTL",
      "B": "DynamoDB Streams",
      "C": "DynamoDB Accelerator (DAX)",
      "D": "Global Secondary Index",
      "E": "",
      "Answer": "A",
      "Explanation": "TTL (Time to Live) allows DynamoDB to automatically delete expired items."
    },
    {
      "Q_No": "23",
      "Question": "Which AWS CLI option allows you to retrieve a subset of attributes from a DynamoDB Scan operation?",
      "A": "--filter-expression",
      "B": "--page-size",
      "C": "--max-items",
      "D": "--projection-expression",
      "E": "",
      "Answer": "D",
      "Explanation": "--projection-expression lets you select only certain attributes in your scan results."
    },
    {
      "Q_No": "24",
      "Question": "Which AWS CLI options should you use to paginate results of a DynamoDB Scan operation and minimize output items?",
      "A": "--page-size & --max-items",
      "B": "--page-size & --starting-token",
      "C": "--max-items & --starting-token",
      "D": "--filter-expression",
      "E": "",
      "Answer": "C",
      "Explanation": "--max-items & --starting-token enable pagination and efficient result handling in CLI output."
    },
    {
      "Q_No": "25",
      "Question": "You are developing a banking application that uses DynamoDB to store its data. You want to update both the Exchanges and the AccountBalance tables at the same time or not at all. Which DynamoDB feature allows you to do so?",
      "A": "DynamoDB Indexes",
      "B": "DynamoDB Transactions",
      "C": "DynamoDB Streams",
      "D": "DynamoDB TTL",
      "E": "",
      "Answer": "B",
      "Explanation": "DynamoDB Transactions support atomic, all-or-nothing updates across multiple tables/items."
    },
    {
      "Q_No": "26",
      "Question": "DynamoDB Streams records can be sent to the following, EXCEPT ............................",
      "A": "Simple Queue Service (SQS)",
      "B": "Kinesis Data Streams",
      "C": "AWS Lambda",
      "D": "",
      "E": "",
      "Answer": "A",
      "Explanation": "DynamoDB Streams can be sent to Kinesis Data Streams and Lambda, but not SQS."
    },
    {
      "Q_No": "27",
      "Question": "You have configured a DynamoDB table with a TTL attribute to delete expired user's sessions, but you notice expired items still exist in queries. What should you do?",
      "A": "Do nothing, DynamoDB automatically delete expired items within 48 hours of the expiration",
      "B": "This is a known bug in DynamoDB. Use a Lambda function to periodically delete the expired items",
      "C": "Contact AWS Support to periodically delete expired items",
      "D": "",
      "E": "",
      "Answer": "A",
      "Explanation": "DynamoDB TTL expires items within 48 hours automatically; temporary presence in queries is normal behavior."
    }
  ]
}